#!/bin/sh
# Copyright (C) 2009-2010 OpenWrt.org
# Modified by Arcadyan Tech.

# also check volinfo_brn.sh
# also check diskmount.sh
# ${string:position:length}

USB_ROOT_DIR=/tmp/usb
SEM_LOCK=/tmp/usb/.mount.lck

DEBUG_LEVEL=1
if [ ${DEBUG_LEVEL} -gt 0 ] ; then
	OUTPUT=/dev/console
else
	OUTPUT=/dev/null
fi
echo hotplug mount - action ${ACTION} prod ${PRODUCT} type ${TYPE} intf ${INTERFACE} dev ${DEVICE} devFs ${DEVFS}       > ${OUTPUT}
echo hotplug mount @${ACTION} @${SUBSYSTEM} @${PHYSDEVPATH} @${DEVPATH} @${MODALIAS} @${MAJOR} @${MINOR} @${DEVICENAME} > ${OUTPUT}


# ${1}: device, ${2}: mount-point
mount_dev()
{
	local M_DEVICE
	local M_POINT
	local FS_TYPE
	local T_SDX
	local T_SDXN
	local T_FILE
	local D_VENDOR
	local D_MODEL
	local D_NAME
	local D_NAME_FILE
	M_DEVICE=${1}
	M_POINT=${2}
	T_SDX=${M_DEVICE:5:3}
	T_SDXN=${M_DEVICE:5}
	T_FILE=/tmp/usb/.lastest_${T_SDX}
	D_NAME_FILE=/tmp/usb/.name_${T_SDX}

	mkdir -p ${M_POINT}
	chmod 757 ${M_POINT}
	chown root:readonly ${M_POINT}

	# Detect the File System
	FS_TYPE=`/usr/sbin/blkid -s TYPE ${M_DEVICE} | cut -d '"' -f 2`

	if [ "$FS_TYPE" = "vfat" ] ; then
		mount -t vfat -o gid=1005,rw,utf8,umask=020,flush ${M_DEVICE} ${M_POINT}

	elif [ "$FS_TYPE" = "ntfs" ] ; then
		ntfs-3g -o gid=1005,force,recover,nls=utf8,umask=020 ${M_DEVICE} ${M_POINT}

	elif [ "$FS_TYPE" = "ext2" ] ; then
		mount -t ext2 ${M_DEVICE} ${M_POINT}

	elif [ "$FS_TYPE" = "ext3" ] ; then
		mount -t ext3 ${M_DEVICE} ${M_POINT}

	elif [ "$FS_TYPE" = "ext4" ] ; then
		mount -t ext4 ${M_DEVICE} ${M_POINT}

	else
		# skip /dev/sdX processing if there is any /dev/sdXN partition existed.
		echo "Skip unknown file system type!" > ${OUTPUT}
		if [ -d ${M_POINT} ] ; then
			rmdir ${M_POINT}
		fi
	fi

	# debug
	if [ -n "$FS_TYPE" ] ; then
		echo "mount_dev ${M_DEVICE} ${M_POINT}, with File System: $FS_TYPE" > ${OUTPUT}
	fi

	# enter critical section
	lock -w ${SEM_LOCK}
	lock    ${SEM_LOCK}

	# Find the lastest sdXN partition and create a temp file /tmp/usb/.lastest_sdX
	if ! [ -e ${T_FILE} ] ; then
		echo `grep ${T_SDX} /proc/partitions | sort -k 4 -nrd | awk '{print $4}' | head -n 1` > ${T_FILE}
		echo "Create ${T_FILE} at ${M_DEVICE} time." > ${OUTPUT}
	fi

	# Only one shot for all /dev/sdXN partitions -- begin
	if [ "`cat ${T_FILE}`" == "${T_SDXN}" ] ; then
		/etc/init.d/samba stop
		/etc/init.d/pure-ftpd stop
		/etc/init.d/dropbear usb_start
		disklabel > /tmp/fs/disklabel
		diskinfo_brn.sh
		volinfo_brn.sh
		/usr/sbin/drivecfg.sh sync
		sleep 1

		if [ "`ccfg_cli get web_upnp_av@DLNAS`" == "1" ] ; then
			/usr/sbin/twonky_database_set.sh "mount" "${DEVICENAME}"
			/usr/sbin/dlna_share_folder_set.sh dlna_share_folder_add
		fi
		if [ "`ccfg_cli get enable@samba`" == "1" ] ; then
			/usr/sbin/sambacfg.sh smb_user_cfg_set
			/etc/init.d/samba start
		fi
		if [ "`ccfg_cli get enable@ftpdef`" == "1" ] ; then
			/usr/sbin/ftp_folder_set.sh ftp_default_folder_set 1
		fi
		if [ "`ccfg_cli get enable@webdav`" == "1" ] ; then
			/etc/init.d/webdav restart
		fi

		# send event for /dev/sdX only and save the name in /tmp/usb/.name_sdX
		D_VENDOR=`grep "${T_SDX}.vendor" /proc/arcusb/status.storage | awk '{print $2}'`
		D_MODEL=` grep "${T_SDX}.model"  /proc/arcusb/status.storage | awk '{print $2}'`
		D_NAME="${D_VENDOR}-${D_MODEL}"
		/usr/sbin/libmapi_event_cli add hotplug USB "Storage in" "$D_NAME"
		echo -n "$D_NAME" > $D_NAME_FILE
		echo "Create ${D_NAME_FILE}." > ${OUTPUT}

		sleep 2
		/etc/init.d/task_prio.sh check

		# Delete the temp file /tmp/usb/.lastest_sdX
		if [ -e ${T_FILE} ] ; then
			rm ${T_FILE}
			echo "Delete ${T_FILE} at ${M_DEVICE} time." > ${OUTPUT}
		fi
	fi
	# Only one shot for all /dev/sdXN partitions -- end

	lock -u ${SEM_LOCK}
	# quit critical section

	return 0
}


# ${1}: device, ${2}: mount-point
umount_dev()
{
	# Kernel will call 'arcusb_notifier.sh' to umount sdXN in the half way
	# between file system and USB storage class driver. Including
	# 1. /usr/sbin/twonky_database_set.sh "umount" "${3}"
	# 2. umount [-l] /dev/${3}

	local M_DEVICE
	local M_POINT
	local T_SDX
	local T_SDXN
	local T_FILE
	local D_NAME
	local D_NAME_FILE
	M_DEVICE=${1}
	M_POINT=${2}
	T_SDX=${M_DEVICE:5:3}
	T_SDXN=${M_DEVICE:5}
	T_FILE=/tmp/usb/.lastest_${T_SDX}
	D_NAME_FILE=/tmp/usb/.name_${T_SDX}

	# clean mount-point
	if [ -d ${M_POINT} ] ; then
		rmdir ${M_POINT}
	fi

	# enter critical section
	lock -w ${SEM_LOCK}
	lock    ${SEM_LOCK}

	# Only one shot for all /dev/sdXN partitions -- begin
	if [ "${T_SDX}" == "${T_SDXN}" ] ; then
		disklabel > /tmp/fs/disklabel
		diskinfo_brn.sh
		volinfo_brn.sh
		/usr/sbin/drivecfg.sh sync
		sleep 1

		if [ "`ccfg_cli get web_upnp_av@DLNAS`" == "1" ] ; then
			/usr/sbin/dlna_share_folder_set.sh dlna_default_folder_set 1
		fi
		if [ "`ccfg_cli get enable@samba`" == "1" ] ; then
			/usr/sbin/sambacfg.sh smb_user_cfg_set
			/etc/init.d/samba start
		fi
		if [ "`ccfg_cli get enable@ftpdef`" == "1" ] ; then
			/usr/sbin/ftp_folder_set.sh ftp_default_folder_set 1
		fi
		if [ "`ccfg_cli get enable@webdav`" == "1" ] ; then
			/etc/init.d/webdav restart
		fi

		# send event for /dev/sdX only and clean the name file /tmp/usb/.name_sdX
		D_NAME=`cat ${D_NAME_FILE}`
		/usr/sbin/libmapi_event_cli add hotplug USB "Storage out" "$D_NAME"
		if [ -e ${D_NAME_FILE} ] ; then
			rm ${D_NAME_FILE}
			echo "Delete ${D_NAME_FILE}." > ${OUTPUT}
		fi

	fi
	# Only one shot for all /dev/sdXN partitions -- end

	lock -u ${SEM_LOCK}
	# quit critical section

	return 0
}


case "$ACTION" in
	"add")
		if [ "${DEVICENAME:0:2}" == "sd" ] ; then
			if [ -z "${DEVICENAME:3}" ] ; then
				mount_dev /dev/${DEVICENAME} ${USB_ROOT_DIR}/${DEVICENAME:2}1
			else
				mount_dev /dev/${DEVICENAME} ${USB_ROOT_DIR}/${DEVICENAME:2}
			fi
		fi
		;;

	"remove")
		if [ "${DEVICENAME:0:2}" == "sd" ] ; then
			if [ -z "${DEVICENAME:3}" ] ; then
				umount_dev /dev/${DEVICENAME} ${USB_ROOT_DIR}/${DEVICENAME:2}1
			else
				umount_dev /dev/${DEVICENAME} ${USB_ROOT_DIR}/${DEVICENAME:2}
			fi
		fi
		;;

esac
